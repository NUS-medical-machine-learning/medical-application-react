{"version":3,"sources":["resources/images/Pneunostic-Logo.svg","components/signIn.jsx","components/analysisConsoleComponents/modalResult.jsx","components/analysisConsoleComponents/testing-progress.js","components/analysisConsoleComponents/toasts.jsx","components/analysisConsoleComponents/http.js","components/analysisConsoleComponents/uploadFile.jsx","components/analysisConsoleComponents/navbar.jsx","apiCalls/common.js","components/analysisConsoleComponents/controlButtons.jsx","components/analysisConsoleComponents/subjectIdInput.jsx","components/analysisConsoleComponents/Breath/TimeSeriesContainer/BreathTimeSeriesContainer.jsx","components/analysisConsoleComponents/Breath/Breath.jsx","components/analysisConsoleComponents/analysisConsole.jsx","components/errorPage.jsx","PrivateRoute.js","helpers/Hooks/useSocket.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","uiConfig","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","SignOut","signOut","SignInScreen","useState","isSignedIn","setIsSignedIn","useEffect","unregisterAuthObserver","onAuthStateChanged","user","to","id","class","src","Pneunostics","width","height","alt","uiCallback","ui","disableAutoSignIn","firebaseAuth","handleClose","props","setShowModalResult","ModalResultType","NEGATIVE","POSITIVE","INVALID","ModalResult","title","fullSubjectId","getFullSubjectId","currentModalResultType","Badge","pill","bg","text","console","log","Modal","show","showModalResult","onHide","backdrop","keyboard","Header","Title","Footer","onClick","resetToNewProgress","className","TestingProgress","progressName","this","New","SubjectIdReceived","AnalyzingStarted","AnalyzingStopped","DataSent","Finished","ToastStart","toast","loading","toastConfig","update","render","toastBootstrap","type","isLoading","ToastStop","ToastDataSent","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","mess","Date","toLocaleTimeString","uploadFile","bin_data","startingTime","processAfter","setTestingProgressState","modalResult","info","fetch","method","body","redirect","headers","then","response","json","result","setTimeout","modalResultType","setCurrentModalResultType","handleShow","ModalResultPopUp","PopUpResult","saveFileResult","resultData","FormData","append","selectedFile","name","saveResult","setShowModalUploadFile","ModalUploadFilePopUp","ModalUploadFile","showModalUploadFile","closeButton","Body","onChange","event","setSelectedFile","target","files","setIsFilePicked","isFilePicked","moment","format","handleSubmission","NavBar","href","ToggleButton","variant","checked","darkMode","value","e","setDarkMode","currentTarget","API_VERSION","ORIGIN_URL","ROOT_URL","lastIndexOf","slice","STATE_MACHINE_ROOT_URL","COMPOUND_DETECTION_ROOT_URL","COMPOUND_DETECTION_SERVICE_URL","MASS_CALIBRATION_ROOT_URL","CONCENTRATION_ROOT_URL","SINGLE_ION_ROOT_URL","TOOLS_ROOT_URL","BREATH_INLET_ROOT_URL","BREATH_INLET_SERVICE_URL","REPLAY_ROOT_URL","BUNDLER_ROOT_URL","mainButton","setStartingTime","btnStyle","btnName","isDisable","btnOnClick","testingProgressState","subjectId","length","isValidSubjectId","error","handleBreatheStart","handleBreatheStop","isLoadingMainButton","disabled","postCancelSample","JSON","stringify","key","res","postValveIsRegulated","boolean","valveIsRegulated","postStartStopBreathe","action","setIsLoadingMainButton","data","status","message","catch","err","finally","uploadDataToDummyServer","processResponse","formData","getFile","arrayBuffer","buffer","recordData","uploadRecord","ControlButtons","subjectIdPrefix","SubjectIdInput","placeholder","inputSubjectIdForm","React","Component","blueColor","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","TimeScale","TimeSeriesScale","chartAreaBorder","beforeDraw","chart","args","options","ctx","chartArea","left","top","save","strokeStyle","borderColor","lineWidth","borderWidth","setLineDash","borderDash","lineDashOffset","borderDashOffset","strokeRect","restore","responsive","plugins","legend","display","labels","font","size","scales","x","time","unit","ticks","autoSkip","maxRotation","major","enabled","y","suggestedMax","suggestedMin","dataset","datasets","label","backgroundColor","removeData","shift","forEach","BreathTimeSeriesContainer","chartRef","socket","current","on","unixTimestamp","scores","date","push","addData","updateData","ref","Breathe","window","innerWidth","windowWidth","setWindowWidth","addEventListener","removeEventListener","compoundDetectionSocket","useWindowUnloadEffect","handler","callOnCleanup","cb","useRef","AnalysisConsole","setSubjectId","renewData","isDarkMode","xmlns","style","fill","viewBox","d","newestOnTop","rtl","pauseOnFocusLoss","transition","Slide","bool","currentUser","email","role","xlinkHref","ErrorPage","getAuth","PrivateRoute","useSocket","io","removeAllListeners","close","App","path","element","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de744489.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Pneunostic-Logo.c1b14dff.svg\";","// Import FirebaseAuth and firebase.\nimport React, { useEffect, useState } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport { Navigate } from \"react-router-dom\";\n\nimport Pneunostics from \"../resources/images/Pneunostic-Logo.svg\";\n\n// Configure Firebase.\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBhRwDtF1z86GzQsiD-ElVRpbjn0aQMkDo\",\n  authDomain: \"medical-application-bee0a.firebaseapp.com\",\n  projectId: \"medical-application-bee0a\",\n  storageBucket: \"medical-application-bee0a.appspot.com\",\n  messagingSenderId: \"454353371186\",\n  appId: \"1:454353371186:web:c35be7e8ac9c48db68bc2b\",\n};\nfirebase.initializeApp(firebaseConfig);\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: \"popup\",\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false,\n  },\n};\n\nexport const SignOut = () => {\n  firebase.auth().signOut();\n};\n\nfunction SignInScreen() {\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n\n  // Listen to the Firebase Auth state and set the local state.\n  useEffect(() => {\n    const unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged((user) => {\n        setIsSignedIn(!!user);\n      });\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, []);\n\n  if (!isSignedIn) {\n    return (\n      <body id=\"body-sign-in\">\n        <div id=\"div-sign-in\">\n          <div class=\"d-flex justify-content-center\">\n            <img\n              src={Pneunostics}\n              class=\"\"\n              width=\"190\"\n              height=\"auto\"\n              alt=\"Pneunostics Logo\"\n            />\n          </div>\n\n          <hr></hr>\n\n          <StyledFirebaseAuth\n            class=\"rounded\"\n            uiCallback={(ui) => ui.disableAutoSignIn()}\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n          <div class=\"d-flex justify-content-center\">\n            <p class=\"mt-5 mb-3 text-muted\">© 2021-2022</p>\n          </div>\n        </div>\n      </body>\n    );\n  }\n\n  return <Navigate to=\"/\" />;\n}\n\nexport default SignInScreen;\n","import React from \"react\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Badge from \"react-bootstrap/Badge\";\n\nconst handleClose = (props) => () => props.setShowModalResult(false);\nconst handleShow = (props) => () => props.setShowModalResult(true);\n\nexport class ModalResultType {\n  static NEGATIVE = new ModalResultType();\n  static POSITIVE = new ModalResultType();\n  static INVALID = new ModalResultType();\n}\n\nexport const ModalResultPopUp = (props, modalResultType) => {\n  props.setCurrentModalResultType(modalResultType);\n  handleShow(props)();\n};\n\nfunction ModalResult(props) {\n  let fullSubjectId = props.getFullSubjectId();\n  let title;\n  switch (props.currentModalResultType) {\n    case ModalResultType.NEGATIVE:\n      title = (\n        <div>\n          Result\n          <Badge pill bg=\"light\" text=\"dark\">\n            {fullSubjectId}\n          </Badge>\n          : <Badge bg=\"success\">NEGATIVE</Badge>\n        </div>\n      );\n      break;\n    case ModalResultType.POSITIVE:\n      title = (\n        <div>\n          Result\n          <Badge pill bg=\"light\" text=\"dark\">\n            {fullSubjectId}\n          </Badge>\n          : <Badge bg=\"danger\">POSITIVE</Badge>\n        </div>\n      );\n      break;\n    case ModalResultType.INVALID:\n      title = (\n        <div>\n          Result\n          <Badge pill bg=\"light\" text=\"dark\">\n            {fullSubjectId}\n          </Badge>\n          : <Badge bg=\"warning\">INVALID</Badge>\n        </div>\n      );\n      break;\n    default:\n      console.log(\"Error with modal result\");\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.showModalResult}\n        onHide={handleClose(props)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Footer>\n          <button\n            onClick={props.resetToNewProgress}\n            className=\"btn btn-outline-info shadow\"\n          >\n            Refresh Subject ID\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalResult;\n","\nexport class TestingProgress {\n  static New = new TestingProgress(\"New\");\n  static SubjectIdReceived = new TestingProgress(\"SubjectIdReceived\");\n  static AnalyzingStarted = new TestingProgress(\"AnalyzingStarted\");\n  static AnalyzingStopped = new TestingProgress(\"AnalyzingStopped\");\n  static DataSent = new TestingProgress(\"DataSent\");\n  static Finished = new TestingProgress(\"Finished\");\n\n  constructor(progressName) {\n    this.progressName = progressName;\n  }\n\n  get fullProgressName() {\n    return this.progressName;\n  }\n}\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { ModalResultPopUp } from \"./modalResult\";\nimport { TestingProgress } from \"./testing-progress.js\";\n\nexport const ToastSubjectIdLocked = (fullSubjectId) => {\n  return toast.info(\n    toastBootstrap(\"Subject ID is looked: \\n\" + fullSubjectId)\n  );\n}\n\nexport const ToastSubjectIdInvalid = () => {\n  return toast.error(\n    toastBootstrap(\"Invalid Subject ID!\")\n  );\n};\n\nexport const ToastStart = {\n  loading: function () {\n    return toast.loading(\"Starting ...\", toastConfig);\n  },\n  success: function (id) {\n    return toast.update(id, {\n      render: toastBootstrap(\"Sampling started\"),\n      type: \"success\",\n      isLoading: false,\n      ...toastConfig,\n    });\n  },\n  error: function (id) {\n    return toast.update(id, {\n      render: toastBootstrap(\"Fail to start\"),\n      type: \"error\",\n      isLoading: false,\n      ...toastConfig,\n    });\n  },\n};\n\nexport const ToastStop = {\n  loading: function () {\n    return toast.loading(\"Stopping ...\");\n  },\n  success: function (id) {\n    return toast.update(id, {\n      render: toastBootstrap(\"Sampling stopped\"),\n      type: \"info\",\n      isLoading: false,\n      ...toastConfig,\n    });\n  },\n  error: function (id) {\n    return toast.update(id, {\n      render: toastBootstrap(\"Fail to stop\"),\n      type: \"error\",\n      isLoading: false,\n      ...toastConfig,\n    });\n  },\n};\n\nexport const ToastDataSent = {\n  loading: function () {\n    return toast.loading(\"Data's sending\");\n  },\n  success: function (id) {\n    return toast.update(id, {\n      render: toastBootstrap(\"Data Sent\"),\n      type: \"success\",\n      isLoading: false,\n      ...toastConfig,\n    });\n  },\n  error: function (id) {\n    return toast.update(id, {\n      render: toastBootstrap(\"Fail to send\"),\n      type: \"error\",\n      isLoading: false,\n      ...toastConfig,\n    });\n  },\n};\n\nconst toastConfig = {\n  position: \"bottom-right\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nconst toastBootstrap = (mess) => {\n  return (\n    <div class=\"d-flex justify-content-between\">\n      <span class=\"fw-bold\">{mess}</span>\n      <span>\n        <small class=\"fw-lighter text-muted\">\n          {new Date().toLocaleTimeString()}\n        </small>\n      </span>\n    </div>\n  );\n};\n\nexport const PopUpResult = (props, modalResult) => {\n  setTimeout(() => {\n    props.setTestingProgressState(TestingProgress.Finished);\n    ModalResultPopUp(props, modalResult);\n  }, 5000);\n};","import { ToastDataSent } from \"./toasts\";\n\nimport { ModalResultType } from \"./modalResult\";\n\nimport { TestingProgress } from \"./testing-progress.js\";\n\nimport { PopUpResult } from \"./toasts\";\n\nexport function getFile(id, startingTime, processResponse) {\n  let formData = new FormData();\n\n  console.log(\"Current time\", startingTime);\n  formData.append(\"time\", startingTime);\n\n  fetch(\"http://localhost:8001/getfile\", {\n    method: \"POST\",\n    body: formData,\n    redirect: \"follow\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"POST\",\n    },\n  })\n    .then(processResponse)\n    .catch((error) => {\n      ToastDataSent.error(id);\n      console.log(\"error\", error);\n    });\n}\n\nexport function uploadRecord(id, props, startingTime) {\n  let recordData = new FormData();\n  recordData.append(\"id\", props.getFullSubjectId());\n  recordData.append(\"time\", startingTime);\n\n  fetch(\"http://127.0.0.1:8001/record\", {\n    method: \"POST\",\n    body: recordData,\n    redirect: \"follow\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"POST\",\n    },\n  })\n    .then((response) => response.text())\n    .then((result) => console.log(result));\n}\n\nexport function uploadFile(id, bin_data, props, startingTime, processAfter) {\n  ToastDataSent.success(id);\n  props.setTestingProgressState(TestingProgress.DataSent);\n\n  let modalResult = ModalResultType.INVALID;\n  let info = \"\";\n\n  fetch(\"https://www.aiteam.link:8100/upload_file\", {\n    method: \"POST\",\n    body: bin_data,\n    redirect: \"follow\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"POST\",\n    },\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      info = result.info;\n      switch (result.info) {\n        case \"negative\":\n          console.log(\"negative\");\n          modalResult = ModalResultType.NEGATIVE;\n          break;\n        case \"positive\":\n          console.log(\"positive\");\n          modalResult = ModalResultType.POSITIVE;\n          break;\n        case \"invalid\":\n          console.log(\"invalid\");\n          modalResult = ModalResultType.INVALID;\n          break;\n        default:\n          console.log(\"invalid\");\n      }\n\n      processAfter(props, startingTime, info);\n\n      PopUpResult(props, modalResult);\n    });\n}\n\nexport function saveFileResult(props, startingTime, info) {\n  let resultData = new FormData();\n  resultData.append(\"id\", props.selectedFile.name);\n  resultData.append(\"time\", startingTime);\n  resultData.append(\"info\", info);\n  resultData.append(\"traceback\", \"\");\n  resultData.append(\"header\", \"\");\n\n  fetch(\"http://127.0.0.1:8001/save_result\", {\n    method: \"POST\",\n    body: resultData,\n    redirect: \"follow\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"POST\",\n    },\n  })\n    .then((response) => response.text())\n    .then((result) => console.log(result));\n}\n\nexport function saveResult(props, startingTime, info) {\n  let resultData = new FormData();\n  resultData.append(\"id\", props.getFullSubjectId());\n  resultData.append(\"time\", startingTime);\n  resultData.append(\"info\", info);\n  resultData.append(\"traceback\", \"\");\n  resultData.append(\"header\", \"\");\n\n  fetch(\"http://127.0.0.1:8001/save_result\", {\n    method: \"POST\",\n    body: resultData,\n    redirect: \"follow\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"POST\",\n    },\n  })\n    .then((response) => response.text())\n    .then((result) => console.log(result));\n}\n","import React from \"react\";\n\nimport Modal from \"react-bootstrap/Modal\";\n\nimport { uploadFile, saveFileResult } from \"./http\";\n\nimport { ToastDataSent } from \"./toasts\";\n\nimport moment from \"moment\";\n\nconst TimeFormat = \"YYYY.MM.DD-HH:mm:ss\";\n\nconst handleClose = (props) => () => props.setShowModalUploadFile(false);\nconst handleShow = (props) => () => props.setShowModalUploadFile(true);\n\nexport const ModalUploadFilePopUp = handleShow;\n\nfunction ModalUploadFile(props) {\n  const changeHandler = (event) => {\n    props.setSelectedFile(event.target.files[0]);\n    props.setIsFilePicked(true);\n  };\n\n  const handleSubmission = (props) => () => {\n    if (props.isFilePicked) {\n      const id = ToastDataSent.loading();\n\n      handleClose(props)();\n      setTimeout(() => {\n        uploadFile(\n          id,\n          props.selectedFile,\n          props,\n          moment().format(TimeFormat),\n          saveFileResult\n        );\n      }, 1500);\n    } else {\n      console.log(\"isFilePicked: False\");\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        show={props.showModalUploadFile}\n        onHide={handleClose(props)}\n        backdrop=\"static\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Upload HDF5 File</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div class=\"mb-3\">\n            <input\n              class=\"form-control\"\n              type=\"file\"\n              id=\"formFile\"\n              onChange={changeHandler}\n            />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button class=\"btn btn-outline-dark\" onClick={handleClose(props)}>\n            Close\n          </button>\n          <button\n            className=\"btn btn-outline-danger shadow\"\n            onClick={handleSubmission(props)}\n          >\n            Upload and Test\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalUploadFile;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Pneunostics from \"../../resources/images/Pneunostic-Logo.svg\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport { SignOut } from \"../signIn\";\n\nimport { ModalUploadFilePopUp } from \"./uploadFile\";\n\nfunction NavBar(props) {\n  // const [checked, setChecked] = useState(false);\n\n  return (\n    <div class=\"container\">\n      <header class=\"row py-1 mb-4 border-bottom align-items-center\">\n        <div className=\"col-2\">\n          <a href=\"/#\" class=\"me-auto\">\n            <img src={Pneunostics} width=\"auto\" height=\"85\" alt=\"NUS Logo\" />\n          </a>\n        </div>\n\n        <div className=\"col \">\n          <a\n            className=\"btn btn-danger float-end ms-3\"\n            onClick={SignOut}\n            href=\"/login\"\n          >\n            Sign Out\n          </a>\n\n          <ToggleButton\n            className=\"btn float-end ms-3\"\n            id=\"toggle-check\"\n            type=\"checkbox\"\n            variant=\"outline-info\"\n            checked={props.darkMode}\n            value=\"1\"\n            onChange={(e) => props.setDarkMode(e.currentTarget.checked)}\n          >\n            Dark Mode\n          </ToggleButton>\n\n          <button\n            className=\"btn btn-danger float-end ms-3\"\n            onClick={ModalUploadFilePopUp(props)}\n          >\n            Upload HDF5 file\n          </button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default NavBar;\n","const STATE_MACHINE_PORT = \"5001\";\nconst COMPOUND_DETECTION_PORT = \"5002\";\nconst MASS_CALIBRATION_PORT = \"5003\";\nconst CONCENTRATION_PORT = \"5004\";\nconst SINGLE_ION_PORT = \"5005\";\nconst TRANSCAL_PORT = \"5006\"; //eslint-disable-line\nconst SEQUENCING_PORT = \"5007\"; //eslint-disable-line\nconst MPXVALVE_PORT = \"5008\"; //eslint-disable-line\nconst RANALYSIS_PORT = \"5009\"; //eslint-disable-line\nconst BREATH_INLET_PORT = \"5010\";\nconst GC_PORT = \"5011\"; //eslint-disable-line\nconst CHROMQUANT_PORT = \"5012\"; //eslint-disable-line\nconst TOOLS_PORT = \"5013\";\nconst CLIENT_PORT = \"5014\"; //eslint-disable-line\nconst MOBILE_PORT = \"5015\"; //eslint-disable-line\nconst MS_PORT = \"5016\";\nconst IMS_PORT = \"5017\"; //eslint-disable-line\nconst LCS_PORT = \"5018\"; //eslint-disable-line\nconst REPLAY_PORT = \"5019\"; //eslint-disable-line\nconst THUNER_PORT = \"5020\"; //eslint-disable-line\nconst FINGERPRINTING_PORT = \"5021\"; //eslint-disable-line\nconst CTCAUTOSAMPLER_PORT = \"5022\"; //eslint-disable-line\nconst MFC_OFFSET_PORT = \"5023\"; //eslint-disable-line\nconst BUNDLER_PORT = \"5024\"; //eslint-disable-line\n\nconst API_VERSION = \"v8\";\n\n// === PRODUCTION ADDRESS ===\n// const ORIGIN_URL = window.location.origin;\n// === DEVELOPMENT IPs ====\n// const ORIGIN_URL = \"http://192.168.1.41\"; // ftof\n// const ORIGIN_URL = \"http://192.168.1.8\";\n// const ORIGIN_URL = \"http://192.168.1.75\";\n// const ORIGIN_URL = \"http://192.168.1.22\"; // eitof-012\n// const ORIGIN_URL = \"http://192.168.1.119\"; // ACSM-041 Thun\n// const ORIGIN_URL = \"http://192.168.1.24\"; //c4q-101\n// const ORIGIN_URL = \"http://172.16.16.202\"; // c4q-142\n// const ORIGIN_URL = \"http://192.168.1.91\"; // 493mini\nconst ORIGIN_URL = \"http://p4q-260-pc\";\n\nlet lastIndex = ORIGIN_URL.lastIndexOf(\":\");\n\nexport const ROOT_URL =\n  lastIndex > 5 ? ORIGIN_URL.slice(0, ORIGIN_URL.lastIndexOf(\":\")) : ORIGIN_URL;\n\nexport const STATE_MACHINE_ROOT_URL = `${ROOT_URL}:${STATE_MACHINE_PORT}`;\nexport const STATE_MACHINE_SERVICE_URL = `${STATE_MACHINE_ROOT_URL}/acquility/api/system_control/${API_VERSION}`;\n\nexport const COMPOUND_DETECTION_ROOT_URL = `${ROOT_URL}:${COMPOUND_DETECTION_PORT}`;\nexport const COMPOUND_DETECTION_SERVICE_URL = `${COMPOUND_DETECTION_ROOT_URL}/acquility/api/compound_detection/${API_VERSION}`;\n\nexport const MASS_CALIBRATION_ROOT_URL = `${ROOT_URL}:${MASS_CALIBRATION_PORT}`;\nexport const MASS_CALIBRATION_SERVICE_URL = `${MASS_CALIBRATION_ROOT_URL}/acquility/api/mass_calibration/${API_VERSION}`;\n\nexport const CONCENTRATION_ROOT_URL = `${ROOT_URL}:${CONCENTRATION_PORT}`;\nexport const CONCENTRATION_SERVICE_URL = `${CONCENTRATION_ROOT_URL}/acquility/api/concentration/${API_VERSION}`;\n\nexport const SINGLE_ION_ROOT_URL = `${ROOT_URL}:${SINGLE_ION_PORT}`;\nexport const SINGLE_ION_SERVICE_URL = `${SINGLE_ION_ROOT_URL}/acquility/api/single_ion/${API_VERSION}`;\n\nexport const TOOLS_ROOT_URL = `${ROOT_URL}:${TOOLS_PORT}`;\nexport const TOOLS_SERVICE_URL = `${TOOLS_ROOT_URL}/acquility/api/tools/${API_VERSION}`;\n\nexport const BREATH_INLET_ROOT_URL = `${ROOT_URL}:${BREATH_INLET_PORT}`;\nexport const BREATH_INLET_SERVICE_URL = `${BREATH_INLET_ROOT_URL}/acquility/api/breath_inlet/${API_VERSION}`;\n\nexport const MS_ROOT_URL = `${ROOT_URL}:${MS_PORT}`;\n\nexport const REPLAY_ROOT_URL = `${ROOT_URL}:${REPLAY_PORT}`;\nexport const REPLAY_SERVICE_URL = `${REPLAY_ROOT_URL}/acquility/api/replay/${API_VERSION}`;\n\nexport const BUNDLER_ROOT_URL = `${ROOT_URL}:${BUNDLER_PORT}`;\nexport const BUNDLER_SERVICE_URL = `${BUNDLER_ROOT_URL}/acquility/api/bundler/${API_VERSION}`;\n","import React, { useState } from \"react\";\nimport {\n  BREATH_INLET_SERVICE_URL,\n  COMPOUND_DETECTION_SERVICE_URL,\n} from \"../../apiCalls/common\";\n\nimport {\n  ToastStart,\n  ToastStop,\n  ToastSubjectIdLocked,\n  ToastDataSent,\n  ToastSubjectIdInvalid\n} from \"./toasts\";\n\nimport moment from \"moment\";\n\nimport { TestingProgress } from \"./testing-progress.js\";\n\nimport { getFile, uploadRecord, uploadFile, saveResult } from \"./http\";\n\nconst TimeFormat = \"YYYY.MM.DD-HH:mm:ss\";\n\nfunction mainButton(props, startingTime, setStartingTime) {\n  let btnStyle = \"\";\n  let btnName = \"\";\n  let isDisable = false;\n  let btnOnClick = () => {};\n\n  switch (props.testingProgressState) {\n    case TestingProgress.New:\n      btnStyle = \"btn btn-outline-info btn-lg shadow\";\n      btnName = \"Start Sampling\";\n      isDisable = true;\n      break;\n    case TestingProgress.SubjectIdReceived:\n      btnStyle = \"btn btn-outline-info btn-lg shadow\";\n      btnName = \"Start Sampling\";\n      btnOnClick = () => {\n        if (isValidSubjectId(props.subjectId)) {\n          props.setTestingProgressState(TestingProgress.SubjectIdReceived);\n          ToastSubjectIdLocked(props.getFullSubjectId());\n          handleBreatheStart(props, setStartingTime);\n        } else {\n          ToastSubjectIdInvalid();\n        }\n      };\n      break;\n    case TestingProgress.AnalyzingStarted:\n      btnStyle = \"btn btn-outline-danger btn-lg shadow\";\n      btnName = \"Stop Sampling\";\n      btnOnClick = () => {\n        handleBreatheStop(props, startingTime);\n      };\n      break;\n    case TestingProgress.AnalyzingStopped:\n      btnStyle = \"btn btn-outline-warning btn-lg shadow\";\n      btnName = \"Sending Data\";\n      isDisable = true;\n      break;\n    case TestingProgress.DataSent:\n      btnStyle = \"btn btn-outline-warning btn-lg shadow\";\n      btnName = \"Waiting for result\";\n      isDisable = true;\n      break;\n    case TestingProgress.Finished:\n      btnStyle = \"btn btn-info btn-lg shadow\";\n      btnName = \"Sampling Completed\";\n      btnOnClick = () => {\n        props.resetToNewProgress();\n      };\n      break;\n    default:\n    // code block\n  }\n\n  isDisable = isDisable || props.isLoadingMainButton;\n\n  return (\n    <button onClick={btnOnClick} className={btnStyle} disabled={isDisable}>\n      {btnName}\n    </button>\n  );\n}\n\nfunction isValidSubjectId(subjectId) {\n  if (subjectId.length < 6) {\n    return false;\n  }\n\n  return true;\n}\n\nconst postCancelSample = () => {\n  return fetch(`${COMPOUND_DETECTION_SERVICE_URL}/events`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    body: JSON.stringify({ key: \"\" }),\n  }).then((res) => {\n    return res.json();\n  });\n};\n\nconst postValveIsRegulated = (boolean) => {\n  return fetch(`${BREATH_INLET_SERVICE_URL}/flow`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ valveIsRegulated: boolean }),\n  });\n};\nconst postStartStopBreathe = (action) => {\n  return fetch(`${COMPOUND_DETECTION_SERVICE_URL}/detection`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    body: JSON.stringify({ action }),\n  }).then((res) => {\n    return res.json();\n  });\n};\n\nconst handleBreatheStart = (props, setStartingTime) => {\n  //   breathDispatch({ eventStatus: \"Start isLoading\" });\n  const id = ToastStart.loading();\n  props.setIsLoadingMainButton(true);\n\n  postValveIsRegulated(true)\n    .then((data) => {\n      if (data.status === \"fail\") {\n        return console.log(data.message);\n      }\n    })\n    .catch((err) => console.log(err));\n\n  postStartStopBreathe(\"START\")\n    .then((data) => {\n      if (data.status === \"fail\") {\n        return console.log(data.message);\n      }\n      //   breathDispatch({ eventStatus: \"true: waitingForKey\" });\n      ToastStart.success(id);\n      props.setTestingProgressState(TestingProgress.AnalyzingStarted);\n      setStartingTime(moment().format(TimeFormat));\n    })\n    .catch((err) => {\n      console.log(err);\n      ToastStart.error(id);\n    })\n    .finally(() => {\n      props.setIsLoadingMainButton(false);\n    });\n};\n\nconst handleBreatheStop = (props, startingTime) => {\n  //   breathDispatch({ eventStatus: \"Stop isLoading\" });\n  const id = ToastStop.loading();\n  props.setIsLoadingMainButton(true);\n\n  postValveIsRegulated(false)\n    .then((data) => {\n      if (data.status === \"fail\") {\n        return console.log(data.message);\n      }\n    })\n    .catch((err) => console.log(err));\n\n  postCancelSample().catch((error) => console.log(error.message));\n\n  postStartStopBreathe(\"STOP\")\n    .then((data) => {\n      if (data.status === \"fail\") {\n        return console.log(data.message);\n      }\n      //   breathDispatch({ eventStatus: \"false: waitingForKey\" });\n      ToastStop.success(id);\n      props.setTestingProgressState(TestingProgress.AnalyzingStopped);\n\n      uploadDataToDummyServer(props, startingTime);\n    })\n    .catch((err) => {\n      console.log(err.message);\n      ToastStop.error(id);\n    })\n    .finally(() => {\n      props.setIsLoadingMainButton(false);\n    });\n};\n\nexport const handleBreatheStopSilent = () => {\n  //   breathDispatch({ eventStatus: \"Stop isLoading\" });\n\n  postValveIsRegulated(false)\n    .then((data) => {\n      if (data.status === \"fail\") {\n        return console.log(data.message);\n      }\n    })\n    .catch((err) => console.log(err));\n\n  postCancelSample().catch((error) => console.log(error.message));\n\n  postStartStopBreathe(\"STOP\")\n    .then((data) => {\n      if (data.status === \"fail\") {\n        return console.log(data.message);\n      }\n      //   breathDispatch({ eventStatus: \"false: waitingForKey\" });\n    })\n    .catch((err) => {\n      console.log(err.message);\n    });\n};\n\nconst uploadDataToDummyServer = (props, startingTime) => {\n  const id = ToastDataSent.loading();\n\n  setTimeout(() => {\n    getFile(id, startingTime, (response) => {\n        response.arrayBuffer().then((buffer) => {\n          let bin_data = buffer;\n\n          uploadRecord(id, props, startingTime);\n\n          uploadFile(id, bin_data, props, startingTime, saveResult);\n        });\n      })      \n\n  }, 5000);\n};\n\n\n\nfunction ControlButtons(props) {\n  const [startingTime, setStartingTime] = useState(\"\");\n\n  return (\n    <div className=\"d-grid gap-2\">\n      {mainButton(props, startingTime, setStartingTime)}\n    </div>\n  );\n}\n\nexport default ControlButtons;\n","import React from \"react\";\n\nimport { TestingProgress } from \"./testing-progress.js\";\n\nexport const subjectIdPrefix = \"PNS-\";\n\nclass SubjectIdInput extends React.Component {\n  render() {\n    return inputSubjectIdForm(this.props);\n  }\n}\n\nfunction inputSubjectIdForm(props) {\n  let isDisable;\n  switch (props.testingProgressState) {\n    case TestingProgress.SubjectIdReceived:\n      isDisable = false;\n      break\n    default:\n      isDisable = true;\n  }\n\n  return (\n    <div className=\"input-group\">\n      <span className=\"input-group-text bg-tertiary\">{subjectIdPrefix}</span>\n      <input\n        aria-label=\"Server\"\n        className=\"form-control bg-tertiary\"\n        placeholder=\"Enter Test ID to begin sampling\"\n        type=\"text\"\n        onChange={props.onChange}\n        value={props.subjectId}\n        disabled={isDisable}\n      />\n    </div>\n  );\n}\n\nexport default SubjectIdInput;\n","import React, { useEffect } from \"react\";\nimport \"chartjs-adapter-moment\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale,\n  TimeSeriesScale,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nconst blueColor = \"rgb(13,202,240)\";\nconst blueColorLighter = \"rgba(13,202,240,0.5)\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale,\n  TimeSeriesScale\n);\n\nconst chartAreaBorder = {\n  id: \"chartAreaBorder\",\n  beforeDraw(chart, args, options) {\n    const {\n      ctx,\n      chartArea: { left, top, width, height },\n    } = chart;\n    ctx.save();\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.setLineDash(options.borderDash || []);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.strokeRect(left, top, width, height);\n    ctx.restore();\n  },\n};\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\",\n\n      display: true,\n      labels: {\n        // This more specific font property overrides the global property\n        font: {\n          size: 16,\n        },\n      },\n    },\n    chartAreaBorder: {\n      borderColor: blueColor,\n      borderWidth: 2,\n      borderDash: [5, 5],\n      borderDashOffset: 2,\n    },\n  },\n  scales: {\n    x: {\n      type: \"time\",\n      time: {\n        unit: \"second\",\n      },\n      title: {\n        display: true,\n        text: \"Time\",\n        font: {\n          size: 16,\n        },\n      },\n      ticks: {\n        autoSkip: false,\n        maxRotation: 0,\n        major: {\n          enabled: true,\n        },\n        font: {\n          size: 16,\n        },\n      },\n    },\n    y: {\n      // the data maximum used for determining the ticks is Math.max(dataMax, suggestedMax)\n      suggestedMax: 30,\n      suggestedMin: -2,\n      ticks: {\n        font: {\n          size: 16,\n        },\n      },\n    },\n  },\n};\n\nconst dataset = {\n  labels: [],\n  datasets: [\n    {\n      label: \"Acetone\",\n      data: [],\n      borderColor: blueColor, //Blue\n      backgroundColor: blueColorLighter,\n    },\n    {\n      label: \"Breath Detection\",\n      data: [],\n      borderColor: \"rgb(255, 99, 132)\", //Red\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n    },\n  ],\n};\n\nconst addData = (chart, label, data) => {\n  chart.data.labels.push(label);\n  chart.data.datasets[0].data.push(data);\n  chart.data.datasets[1].data.push(0);\n};\n\nconst removeData = (chart) => {\n  chart.data.labels.shift();\n  chart.data.datasets.forEach((dataset) => {\n    dataset.data.shift();\n  });\n};\n\nconst updateData = (chart, label, data) => {\n  if (chart.data.labels.length > 20) {\n    // Render about 10 seconds\n    removeData(chart);\n  }\n  addData(chart, label, data);\n\n  chart.update();\n};\n\nexport const renewData = (chart) => {\n  while (chart.data.labels.length > 0) {\n    removeData(chart);\n  }\n  chart.update();\n};\n\nexport default function BreathTimeSeriesContainer(props) {\n  // const chartRef = useRef(null);\n\n  const chartRef = props.chartRef;\n  const socket = props.socket;\n\n  useEffect(() => {\n    const chart = chartRef.current;\n\n    console.log(\"New socket set detection\");\n    socket.on(\"detection\", ({ data }) => {\n      const unixTimestamp = data.scores[0][0][0];\n      const date = new Date(unixTimestamp * 1000);\n      updateData(chart, date, data.scores[0][1][0]);\n    });\n  }, [socket, chartRef]);\n\n  return (\n    <Line\n      className=\"\"\n      ref={chartRef}\n      options={options}\n      data={dataset}\n      height={\"100px\"}\n      plugins={[chartAreaBorder]}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport BreatheTimeSeriesContainer from \"./TimeSeriesContainer/BreathTimeSeriesContainer\";\n\nexport default function Breathe(props) {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setWindowWidth(window.innerWidth);\n    });\n\n    return () => {\n      window.removeEventListener(\"resize\", () => {\n        setWindowWidth(window.innerWidth);\n      });\n    };\n  }, [windowWidth]);\n\n  return (\n    <BreatheTimeSeriesContainer\n      chartRef={props.chartRef}\n      socket={props.compoundDetectionSocket}\n    />\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport NavBar from \"./navbar\";\nimport ControlButtons from \"./controlButtons\";\nimport SubjectIdInput from \"./subjectIdInput\";\nimport Breathe from \"./Breath/Breath\";\nimport firebase from \"firebase/compat/app\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport { Slide } from \"react-toastify\";\n\nimport { TestingProgress } from \"./testing-progress.js\";\n\nimport { handleBreatheStopSilent } from \"./controlButtons\";\n\nimport { renewData } from \"./Breath/TimeSeriesContainer/BreathTimeSeriesContainer\";\n\nimport { subjectIdPrefix } from \"./subjectIdInput\";\n\nimport ModalResult from \"./modalResult\";\n\nimport ModalUploadFile from \"./uploadFile\";\n\nconst DEFAULT_SUBJECT_ID = \"\";\n\nfunction AnalysisConsole(props) {\n  console.log(\"AnalysisConsole called\");\n\n  const [darkMode, setDarkMode] = useState(false);\n  const [subjectId, setSubjectId] = useState(DEFAULT_SUBJECT_ID);\n  const [testingProgressState, setTestingProgressState] = useState(\n    TestingProgress.SubjectIdReceived\n  );\n\n  useEffect(() => {\n    console.log(\"Testing Progress State\", testingProgressState.progressName);\n  }, [testingProgressState]);\n\n  const [isLoadingMainButton, setIsLoadingMainButton] = useState(false);\n\n  const [showModalResult, setShowModalResult] = useState(false);\n  const [currentModalResultType, setCurrentModalResultType] = useState(\n    null\n  );\n\n  const [showModalUploadFile, setShowModalUploadFile] = useState(false);\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n\n  const chartRef = useRef(null);\n\n  const handleChange = (event) => {\n    setSubjectId(event.target.value);\n  };\n\n  const getFullSubjectId = () => {\n    return subjectIdPrefix + subjectId;\n  };\n\n  const resetSubjectId = () => setSubjectId(DEFAULT_SUBJECT_ID);\n\n  // function refreshPage() {\n  //   window.location.reload(false);\n  // }\n\n  const resetToNewProgress = () => {\n    resetSubjectId();\n    setIsLoadingMainButton(false);\n    handleBreatheStopSilent();\n    setTestingProgressState(TestingProgress.SubjectIdReceived);\n    setShowModalResult(false);\n    setShowModalUploadFile(false);\n    setIsFilePicked(false);\n    renewData(chartRef.current);\n    // refreshPage();\n  };\n\n  useWindowUnloadEffect(() => {\n    console.log(\"reloaded\");\n    resetToNewProgress();\n  }, true);\n\n  let isDarkMode = darkMode ? \"dark\" : \"\";\n\n  return (\n    <body id=\"my-div\" className={isDarkMode}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ display: \"none\" }}>\n        <symbol id=\"info-fill\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n          <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\" />\n        </symbol>\n      </svg>\n      <div className=\"\">\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          transition={Slide}\n        />\n      </div>\n\n      <section className=\"\">\n        <ModalResult\n          showModalResult={showModalResult}\n          setShowModalResult={setShowModalResult}\n          currentModalResultType={currentModalResultType}\n          getFullSubjectId={getFullSubjectId}\n          resetToNewProgress={resetToNewProgress}\n        />\n      </section>\n\n      <section className=\"\">\n        <ModalUploadFile\n          selectedFile={selectedFile}\n          setSelectedFile={setSelectedFile}\n          isFilePicked={isFilePicked}\n          setIsFilePicked={setIsFilePicked}\n          showModalUploadFile={showModalUploadFile}\n          setShowModalUploadFile={setShowModalUploadFile}\n          setShowModalResult={setShowModalResult}\n          setCurrentModalResultType={setCurrentModalResultType}\n          testingProgressState={testingProgressState}\n          setTestingProgressState={setTestingProgressState}\n          resetToNewProgress={resetToNewProgress}\n        />\n      </section>\n\n      <section className=\"\">\n        <NavBar\n          darkMode={darkMode}\n          setDarkMode={(bool) => setDarkMode(bool)}\n          setShowModalUploadFile={setShowModalUploadFile}\n        />\n      </section>\n\n      <section className=\"\">\n        <div class=\"container py-1 px-5\">\n          <div class=\"card shadow rounded\">\n            <div class=\"card-header p-3 bg-supporting\">\n              <span class=\"fs-5\">\n                Operator Workstation for{\" \"}\n                <span class=\"fw-bold text-uppercase\">\n                  {firebase.auth().currentUser.email}\n                </span>\n              </span>\n            </div>\n            <div class=\"card-body bg-tertiary\">\n              <Breathe\n                chartRef={chartRef}\n                compoundDetectionSocket={props.compoundDetectionSocket}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"\">\n        <div className=\"container py-3 px-5\">\n          <div className=\"\">\n            <div className=\"row\">\n              <div className=\"col-9\">\n                <div className=\"shadow rounded\">\n                  <div class=\"card shadow rounded\">\n                    <div class=\"card-header px-3 py-2 bg-supporting\">\n                      <svg\n                        className=\"bi flex-shrink-0 me-2\"\n                        width={24}\n                        height={24}\n                        role=\"img\"\n                        aria-label=\"Success:\"\n                      >\n                        <use xlinkHref=\"#info-fill\" />\n                      </svg>\n                      <span class=\"align-middle\">\n                        <span class=\"fs-5\">SUBJECT INFO</span>\n                      </span>\n                    </div>\n                    <div class=\"card-body bg-tertiary\">\n                      <SubjectIdInput\n                        onChange={handleChange}\n                        subjectId={subjectId}\n                        testingProgressState={testingProgressState}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-3\">\n                <ControlButtons\n                  testingProgressState={testingProgressState}\n                  setTestingProgressState={setTestingProgressState}\n                  subjectId={subjectId}\n                  resetToNewProgress={resetToNewProgress}\n                  isLoadingMainButton={isLoadingMainButton}\n                  setIsLoadingMainButton={setIsLoadingMainButton}\n                  getFullSubjectId={getFullSubjectId}\n                  setShowModalResult={setShowModalResult}\n                  setCurrentModalResultType={setCurrentModalResultType}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </body>\n  );\n}\n\nconst useWindowUnloadEffect = (handler, callOnCleanup) => {\n  const cb = useRef();\n\n  cb.current = handler;\n\n  useEffect(() => {\n    const handler = () => cb.current();\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => {\n      if (callOnCleanup) handler();\n\n      window.removeEventListener(\"beforeunload\", handler);\n    };\n  }, [callOnCleanup]);\n};\n\nexport default AnalysisConsole;\n","import React from 'react';\n\nclass ErrorPage extends React.Component {\n    render() { \n        return <div>ERROR! PAGE NOT FOUND</div>;\n    }\n}\n \nexport default ErrorPage;","import React from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\n\nconst auth = getAuth();\n\nconst PrivateRoute = () => {\n  const currentUser = auth.currentUser;\n\n  return currentUser ? <Outlet /> : <Navigate to=\"/login\" />;\n  // const auth = null; // determine if authorized, from context or however you're doing it\n\n  // If authorized, return an outlet that will render child elements\n  // If not, return element that will navigate to login page\n};\n\nexport default PrivateRoute;\n","import { useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\n\nconst useSocket = (...args) => {\n  const { current: socket } = useRef(io(...args));\n  console.log(\"socketIo called\");\n  useEffect(() => {\n    return () => {\n      console.log(\"socketIo closed\");\n      socket && socket.removeAllListeners();\n      socket && socket.close();\n    };\n  }, [socket]);\n  return [socket];\n};\n\nexport default useSocket;\n","import AnalysisConsole from \"./components/analysisConsoleComponents/analysisConsole\";\nimport SignInScreen from \"./components/signIn\";\nimport ErrorPage from \"./components/errorPage\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport { COMPOUND_DETECTION_ROOT_URL } from \"./apiCalls/common\";\nimport useSocket from \"./helpers/Hooks/useSocket\";\n\nfunction App() {\n  console.log(\"App.js called\");\n\n  const [compoundDetectionSocket] = useSocket(COMPOUND_DETECTION_ROOT_URL);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<PrivateRoute />}>\n          <Route\n            path=\"/\"\n            element={\n              <AnalysisConsole\n                compoundDetectionSocket={compoundDetectionSocket}\n              />\n            }\n          />\n        </Route>\n        <Route path=\"/login\" element={<SignInScreen />} />\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import \"bootstrap/dist/js/bootstrap.bundle\"\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"./style/index.css\"\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}